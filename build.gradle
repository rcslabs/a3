
allprojects {
    group = 'com.rcslabs'
    version = '3.1.0-SNAPSHOT'

    apply plugin: 'maven'

    repositories {
        mavenLocal()
        maven{ url 'http://repo.rcslabs.ru/archiva/repository/internal/'}
        maven{ url 'http://repo.rcslabs.ru/archiva/repository/snapshots/'}
        mavenCentral()
    }

    // for 'publish' task - URL depends on version suffix
    ext.rcslabsRepo = 'http://repo.rcslabs.ru/archiva/repository/'+(version.endsWith('-SNAPSHOT') ? 'snapshots/' : 'internal/')
    ext.datetime = new java.text.SimpleDateFormat("yyyyMMdd-HHmm").format(Calendar.getInstance().getTime());
    ext.builder = System.getProperty("user.name"); 

    new ByteArrayOutputStream().withStream { os ->
        try{
            def result = exec {
                ignoreExitValue = true
                executable = 'svn'
                args = ['info', projectDir]
                standardOutput = os
            }
            def rev = (os.toString() =~ /Last Changed Rev: (\d+)/)
            project.ext.revision = rev[0][1];
        } catch (e) {
            project.ext.revision = 'N/A'
        }
    }
}

subprojects {
    // ugly fix the issue https://github.com/GradleFx/GradleFx/issues/91
    // gradlefx conflicts with the maven-publish plugin
    if(!('rtmp2js' == name || 'media2js' == name)) {
        apply plugin: 'maven-publish'  
        publishing {
            repositories {
                maven { url rcslabsRepo }
            }
        }  
    }

    buildscript {
        repositories {
            mavenCentral()
        }
    }
}

task (build) {
    dependsOn ':libraries:media2js:build'
    dependsOn ':libraries:rtmp2js:build'
    dependsOn ':libraries:a3client:build'
    dependsOn ':client-handler:build'
    dependsOn ':libraries:java:rcl-api:build'
    dependsOn ':libraries:java:redis-client:build'
    dependsOn ':webcall-app:build'
    dependsOn ':click2call:client:build'
    dependsOn ':click2call:server:build'
}

task (dist, type: Tar) {
    dependsOn ':client-handler:dist'
    dependsOn 'build'

    // TODO: remove hardcoded 'build' dir
    extension = 'tar.gz'
    baseName = 'alena3-dist'
    compression = Compression.GZIP
    exclude '**/.svn'
    exclude '**/.git'

    from('scripts'){
        exclude 'nginx.conf'
        into('alena')
        fileMode = 0755 
    }

    from('scripts'){
        include 'nginx.conf'
        into('alena')
    }

    from('.'){
        include 'install.sh'
        into('alena')
        fileMode = 0755 
    }

    from("webcall-app/build/libs"){
        include '*.jar'
        rename 'webcall-app-(.+).jar', 'webcall-app.jar'
        into('alena/webcall-app')
    }

    from('webcall-app/src/main/resources'){
        include 'default.properties'
        rename 'default.properties', 'config.ini'
        into('alena/webcall-app')
    }

    from('media-controller'){
        into('alena/media-controller')  
    }

    from("client-handler/build"){
        include '*.js'
        include 'config.ini'
        into('alena/client-handler')
    }
    
    from("client-handler/build/node_modules"){
        into('alena/client-handler/node_modules')
    }

    from("libraries"){
        include 'gst-speex-flvmux.patch'
        into('alena')
    }
}

