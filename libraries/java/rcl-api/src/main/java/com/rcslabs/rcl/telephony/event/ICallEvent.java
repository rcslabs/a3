package com.rcslabs.rcl.telephony.event;

import java.lang.reflect.Method;

import com.rcslabs.rcl.core.event.IEvent;
import com.rcslabs.rcl.telephony.ICall;
import com.rcslabs.rcl.telephony.ICallListener;
import com.rcslabs.rcl.telephony.entity.ISdpObject;

/**
 * Event that is generated by a call.
 *
 */
public interface ICallEvent extends IEvent {

	/**
	 * An event type.
	 *
	 */
	public enum Type implements IEventType {
		CALL_STARTING(listenerMethod("onCallStarting", ICallStartingEvent.class)),
		CALL_STARTED(listenerMethod("onCallStarted", ICallEvent.class)),
		CALL_FINISHED(listenerMethod("onCallFinished", ICallEvent.class)),
		CALL_FAILED(listenerMethod("onCallFailed", ICallFailedEvent.class)),
		CALL_TRANSFERED(listenerMethod("onCallTransfered", ICallTransferEvent.class)),
		TRANSFER_FAILED(listenerMethod("onTransferFailed", ICallTransferEvent.class)),
		CALL_ERROR(listenerMethod("onCallError", ICallEvent.class)),
		CALL_FINISH_NOTIFICATION(
				listenerMethod("onCallFinishNotification", ICallFinishNotificationEvent.class)
		);
		
		private static Method listenerMethod(String name, Class<?> eventType) {
			try {
				return ICallListener.class.getMethod(name, eventType);
			} catch (Exception e) {
				throw new IllegalStateException(e);
			}
		}
				
		private final Method listenerMethod;

		private Type(Method listenerMethod) {
			this.listenerMethod = listenerMethod;
		}
		
		public Method getListenerMethod() {
			return listenerMethod; 
		}
		
		@Override
		public String getCategory() {
			return "Call";
		}
	}

	/**
	 * Returns a call, which generated this event.
	 */
	ICall getCall();

	/**
	 * Returns this event's type.
	 */
	Type getEventType();

    ISdpObject getSdpObject();
}
